(#Y(si::bytecodes nil nil (15 0 77 77 77 15 1 77 77 77 77 77 15 2 77 19 12 3 29) #1=#A(t (73) ("02-SIMPLE-PROGRAM" (#2="CL") ((#3="ALEXANDRIA" #4="MAPPEND")) si::dodefpackage "LISP-OVERVIEW" (#2#) ("PROPER-LIST-P") "GENERAL-PROBLEM-SOLVER" (#2#) (#5="*DBG-IDS*" #6="DBG" "DBG-INDENT" #7="DEBUG*" #8="FIND-ALL" #9="STARTS-WITH" #10="UNDEBUG*") ((#3# "IOTA" #4# "SHUFFLE")) "ELIZA" (#2#) (#11="LOOKUP" #12="BINDING-VAL") ((#3# #13="ENSURE-LIST" #4# "RANDOM-ELT") (#14="GENERAL-PROBLEM-SOLVER" #9#)) "TOOLS" (#2#) (#15="?*" #16="?+" #17="??" "?AND" "?IF" #18="?IS" "?NOT" "?OR" "?[" "?]" #19="+FAIL+" #20="+NO-BINDINGS+" "A*-SEARCH" "BEAM-SEARCH" "BEST-FIRST-SEARCH" #21="BINDING-VAR" #12# "BREADTH-FIRST-SEARCH" "DEPTH-FIRST-SEARCH" #22="EXTEND-BINDINGS" "DIFF" #23="EXPAND-PAT-MATCH-ABBREV" #24="GET-BINDING" "GRAPH-SEARCH" "INTERACTIVE-INTERPRETER" "IS" "ITER-WIDE-SEARCH" #11# #25="MAKE-BINDING" #26="MATCH-VARIABLE" "MAP-PATH" #27="PAT-MATCH" #28="PAT-MATCH-ABBREV" "PATH" "PATH-SAVER" "PATH-STATES" "PRICE-IS-RIGHT" "PROMPT-GENERATOR" "RM-TMP" #29="RULE" "RULE-PATTERN" "RULE-RESPONSE" #30="RULE-BASED-TRANSLATOR" "SEARCH-ALL" "SORTER" "TREE-SEARCH" #31="VARIABLEP") ((#14# #5# #6# #7# #10#) (#3# #13# "XOR")) "STUDENT" (#2#) ("PREFIX->INFIX") ((#32="TOOLS" #21# #12# #23# #22# #24# #25# #26# #27# #28# #30# #31#)) "SYMBOLIC" (#2# #33="REPL-UTILITIES") (#34="LENGTH=1" #35="INFIX->PREFIX" #36="^" #37="SIMPLIFY" #38="INT" #39="D" #40="SIMPLIFY-EXP" #31# "EXP" "EXP-ARGS" #41="EXP-LHS" #42="EXP-RHS" #43="EVALUABLE" #44="EXP-OP" #45="EXPP" #46="SET-SIMP-FN" #47="*SIMPLIFICATION-RULES*" #48="SIMPLIFY-BY-FN" #49="SIMP-RULE" #50="CLEAR-PROPS" #51="NOT-NUMBER-P" #52="X" #53="Y" #54="E" #55="UNDEFINED" #39# #56="SIMP-FN" "FIND-ANYWHERE" #45#) ((#32# #30# #28# #23# #15# #16# #18#)) "EFFICIENCY" (#2#) (#57="WITH-PROFILING" #58="MEMOIZE" #59="DELAY" #60="FORCE") ((#32# #27# #26# #30#) (#33# #61="TRACE-PACKAGE") (#62="SYMBOLIC" #34# #35# #36# #37# #38# #39# #40# #31# #41# #42# #44# #43# #47# #48#)) "EFFICIENT-SIMPLIFY" (#2# #62#) (#37# #40#) (#63="RULES-FOR" #64="INDEX-RULES" #65="MAIN-OP") ((#66="EFFICIENCY" #58# #57#) (#32# #26# #27# #30#)) "COMPILE-SIMPLIFY" (#2#) (#67="CONCAT-SYMBOL" #68="NEW-SYMBOL") (("ELIZA" #11#) ("EFFICIENT-SIMPLIFY" #63# #64# #65#) (#62# #49# #50# #51# #47# #46# #52# #53# #36# #54# #55# #39# #56# #48# #43# #35#) (#14# #9#) (#32# #27# #24# #28# #26#) (#66# #59# #60# #57#)) "MORE-EFFICIENCY" (#2#) (#69="REUSE-CONS") ((#70="COMPILE-SIMPLIFY" #67#)) "LOGIC" (#2#) (#19# #20# #71="*DB-PREDICATES*" #72="*OCCURS-CHECK*" #73="<-" #74="?-" #75="ADD-CLAUSE" #12# #76="CLAUSE-BODY" #77="CLAUSE-HEAD" #78="CLEAR-DB" #79="CLEAR-PREDICATE" #80="CONTINUEP" #13# #22# "FACT" #24# #81="GET-CLAUSES" #11# #26# #82="OCCURS-CHECK" #83="PREDICATE" #84="PROVE" #85="PROVE-ALL" "RENAME-VARIABLES" #86="REPLACE-?-VARS" #29# #87="SHOW-PROLOG-SOLUTIONS" #88="SHOW-PROLOG-VARS" #89="SUBST-BINDINGS" #90="TOP-LEVEL-PROVE" #91="UNIFIER" #92="UNIFY" #93="UNIFY-VARIABLE" "UNIQUE-FIND-ANYWHERE" #31# #94="VARIABLES-IN") ((#95="MORE-EFFICIENCY" #69#)) "COMPILE-LOGIC" (#2#) ((#95# #69#) (#62# #34#) (#70# #67# #68#) (#14# #8#) (#96="LOGIC" #76# #77# #79# #80# #81# #83# #31# #94#)) "OBJECT" (#2#) ((#14# #6# #7# #10#)) "REASONING" (#2# #96#) "REASONING-COMPLETENESS" (#2#) (#19# #20# #71# "*DEPTH-INCR*" "*DEPTH-MAX*" "*DEPTH-START*" #72# "*SEARCH-CUTOFF*" #73# #74# #75# #12# #76# #77# #78# "CLEAR-DTREES" #79# #80# "COPY-DTREE" "DTREE" "DTREE-ATOM-FETCH" "DTREE-ATOMS" "DTREE-FETCH" "DTREE-FIRST" #97="DTREE-INDEX" "DTREE-P" "DTREE-REST" "DTREE-VAR" #13# #22# "FETCH" #24# #81# "GET-DTREE" #98="INDEX" #11# "LOOKUP-ATOM" "MAKE-DTREE" "MAKE-EMPTY-NLIST" #99="MAPC-RETRIEVE" #26# "NLIST-LIST" "NLIST-N" "NLIST-PUSH" #82# #83# #84# #85# #100="QUERY-BIND" "RENAME-PREDICATES" #86# #101="RETRIEVE" #102="RETRIEVE-MATCHES" #69# #87# #88# #89# "TEST-INDEX" #90# #91# #92# #93# "UNIQUE-FIND-ANYWHERE-IF" #31# #94#) ((#95# #69#)) "REASONING-EXPRESSIVENESS" (#2# #103="REASONING-COMPLETENESS") (#101# #99# #102# #100# #86#) (#104="*PRIMITIVES*" #17# "A" #105="ADD-FACT" "ARGS" "DEF-ATTACHED-FN" "EACH" "FACT-PRESENT-P" "IND" #106="INDEX-NEW-FACT" #34# #99# "MAYBE-ADD" #100# "REL" #86# #101# "RETRIEVE-BAGOF" "RETRIEVE-CONJUNCTION" "RETRIEVE-FACT" #102# "RETRIEVE-SETOF" "RUN-ATTACHED-FN" #107="SUB" #108="TEST-BEARS" "TRANSLATE-EXP" "VAL") "REASONING-POSSIBLE-WORLDS" (#2# #103# #109="REASONING-EXPRESSIVENESS") (#104# #105# #97# #98# #106# #107# #108#) ((#109# #99# #100# #86# #101# #102#)) "CANONICAL" (#2#) ((#14# #9#) (#3# #4#) (#62# "EXP-ARGS" "EXP-OP" "EXPP" "LENGTH=1") (#33# #61#)) "EXPERT" (#2#))) #110=#P"/data/data/org.eql5.android.repl/files/quicklisp/local-projects/paip/package.lisp" 0) #Y(si::bytecodes nil nil (15 4 77 77 77 15 5 77 77 77 15 6 77 77 77 19 12 3 29) #1# #110# 132) #Y(si::bytecodes nil nil (15 7 77 77 77 15 8 77 77 77 15 9 77 15 10 77 19 12 3 29) #1# #110# 202) #Y(si::bytecodes nil nil (15 11 77 77 77 15 12 77 77 77 15 13 77 15 14 77 19 12 3 29) #1# #110# 424) #Y(si::bytecodes nil nil (15 15 77 77 77 15 16 77 77 77 15 17 77 15 18 77 19 12 3 29) #1# #110# 635) #Y(si::bytecodes nil nil (15 19 77 77 77 15 20 77 77 77 15 21 77 15 22 77 19 12 3 29) #1# #110# 1591) #Y(si::bytecodes nil nil (15 23 77 77 77 15 24 77 77 77 15 25 77 15 26 77 19 12 3 29) #1# #110# 1916) #Y(si::bytecodes nil nil (15 27 77 77 77 15 28 77 77 77 15 29 77 15 30 77 19 12 3 29) #1# #110# 2475) #Y(si::bytecodes nil nil (15 31 77 77 77 15 32 77 15 33 77 15 34 77 15 35 77 19 12 3 29) #1# #110# 2973) #Y(si::bytecodes nil nil (15 36 77 77 77 15 37 77 77 77 15 38 77 15 39 77 19 12 3 29) #1# #110# 3290) #Y(si::bytecodes nil nil (15 40 77 77 77 15 41 77 77 77 15 42 77 15 43 77 19 12 3 29) #1# #110# 3992) #Y(si::bytecodes nil nil (15 44 77 77 77 15 45 77 77 77 15 46 77 15 47 77 19 12 3 29) #1# #110# 4127) #Y(si::bytecodes nil nil (15 48 77 77 77 15 49 77 77 77 77 77 15 50 77 19 12 3 29) #1# #110# 4885) #Y(si::bytecodes nil nil (15 51 77 77 77 15 52 77 77 77 77 77 15 53 77 19 12 3 29) #1# #110# 5318) #Y(si::bytecodes nil nil (15 54 77 77 77 15 55 77 77 77 77 77 77 77 19 12 3 29) #1# #110# 5427) #Y(si::bytecodes nil nil (15 56 77 77 77 15 57 77 77 77 15 58 77 15 59 77 19 12 3 29) #1# #110# 5473) #Y(si::bytecodes nil nil (15 60 77 77 77 15 61 77 15 62 77 15 63 77 77 77 19 12 3 29) #1# #110# 6622) #Y(si::bytecodes nil nil (15 64 77 77 77 15 65 77 15 66 77 77 15 67 77 77 19 12 3 29) #1# #110# 7246) #Y(si::bytecodes nil nil (15 68 77 77 77 15 69 77 77 77 77 77 15 70 77 19 12 3 29) #1# #110# 7642) #Y(si::bytecodes nil nil (15 71 77 77 77 15 72 77 77 77 77 77 77 77 19 12 3 29) #1# #110# 7911))
